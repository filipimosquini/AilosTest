<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Questao5</name>
    </assembly>
    <members>
        <member name="P:Questao5.Application.Commands.Movements.CreateMovementCommand.RequestId">
            <summary>
            The request Id
            </summary>
        </member>
        <member name="P:Questao5.Application.Commands.Movements.CreateMovementCommand.AccountNumber">
            <summary>
            The bank account number
            </summary>
        </member>
        <member name="P:Questao5.Application.Commands.Movements.CreateMovementCommand.Amount">
            <summary>
            The amount of bank movement
            </summary>
        </member>
        <member name="P:Questao5.Application.Commands.Movements.CreateMovementCommand.MovementType">
            <summary>
            The Movement Types.
            The accepted values is [C] Credit or [D] Debit
            </summary>
        </member>
        <member name="P:Questao5.Application.Commands.Movements.Models.CreateMovementCommandResponse.MovementId">
            <summary>
            The movement id generated after store a bank movement
            </summary>
        </member>
        <member name="P:Questao5.Application.Queries.Movements.GetBalanceQuery.AccountNumber">
            <summary>
            The bank account number
            </summary>
        </member>
        <member name="P:Questao5.Application.Queries.Movements.Models.GetBalanceQueryResponse.AccountNumber">
            <summary>
            The bank account number
            </summary>
        </member>
        <member name="P:Questao5.Application.Queries.Movements.Models.GetBalanceQueryResponse.Holder">
            <summary>
            The holder of bank account
            </summary>
        </member>
        <member name="P:Questao5.Application.Queries.Movements.Models.GetBalanceQueryResponse.QueryDate">
            <summary>
            A datetime when query occurs
            </summary>
        </member>
        <member name="P:Questao5.Application.Queries.Movements.Models.GetBalanceQueryResponse.Balance">
            <summary>
            The balance of bank movements 
            </summary>
        </member>
        <member name="T:Questao5.BuildingBlocks.Controllers.BaseController`1">
            <summary>
            Base controller class.
            </summary>
        </member>
        <member name="P:Questao5.BuildingBlocks.Controllers.BaseController`1._mediatorService">
            <summary>
            Gets or Sets the mediator service.
            </summary>
        </member>
        <member name="P:Questao5.BuildingBlocks.Controllers.BaseController`1._messageCatalog">
            <summary>
            Gets the message catalog.
            </summary>
        </member>
        <member name="M:Questao5.BuildingBlocks.Controllers.BaseController`1.ExecuteAsync``1(System.Func{System.Threading.Tasks.Task{``0}})">
            <summary>
            
            </summary>
            <typeparam name="TDataObject">The type of the data object.</typeparam>
            <param name="function">The function</param>
            <returns></returns>
        </member>
        <member name="M:Questao5.BuildingBlocks.Controllers.BaseController`1.ExecuteAsync``1(System.Func{System.Threading.Tasks.Task{``0}},System.Net.HttpStatusCode)">
            <summary>
            Generate the response asynchronous.
            </summary>
            <typeparam name="TDataObject">The type of the data object.</typeparam>
            <param name="function">The function</param>
            <param name="httpStatusCode">The response code.</param>
            <returns></returns>
        </member>
        <member name="M:Questao5.BuildingBlocks.Controllers.BaseController`1.HandleFatalError">
            <summary>
            Handle the exception result when fatal error occurs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Questao5.BuildingBlocks.Controllers.BaseController`1.HandleAppCustomException(Questao5.BuildingBlocks.Exceptions.AppCustomException)">
            <summary>
            Handle the exception result when AppCustomException occurs.
            </summary>
            <param name="exception"> The exception. </param>
            <returns></returns>
        </member>
        <member name="M:Questao5.BuildingBlocks.Controllers.BaseController`1.HandleValidationException(FluentValidation.ValidationException)">
            <summary>
            Handle the exception result when ValidationException occurs.
            </summary>
            <param name="exception"> The exception. </param>
            <returns></returns>
        </member>
        <member name="T:Questao5.BuildingBlocks.Validations.ValidatorBehavior`2">
            <summary>
            Validator behavior for mediator pipeline class.
            </summary>
            <typeparam name="TRequest"> The type of the request. </typeparam>
            <typeparam name="TResponse"> The type of the response. </typeparam>
        </member>
        <member name="M:Questao5.BuildingBlocks.Validations.ValidatorBehavior`2.Handle(`0,MediatR.RequestHandlerDelegate{`1},System.Threading.CancellationToken)">
            <summary>
            Handles the request validations.
            </summary>
            <param name="request"> The request. </param>
            <param name="next"> The next. </param>
            <param name="cancellationToken"> The cancellation token. </param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Questao5.Controllers.MovementController.CreateMovementAsync(Questao5.Application.Commands.Movements.CreateMovementCommand)">
            <summary>
            api/movements.
            </summary>
            <remarks>
            <p>
            <b> Desciption: </b><br />
            This method create a movement. <br />
            </p>
            <p>
            <b> Requirements: </b><br />
            Not Exists. <br />
            </p>
            </remarks>
            <response code="200">OK</response>
            <response code="400">Bad Request
            <ul>
                <li>Inactive.Account</li>
                <li>Invalid.AccountNumber</li>
                <li>Invalid.Amount</li>
                <li>Invalid.MovementType</li>
                <li>Invalid.RequestId</li>
            </ul>
            </response>
            <response code="404">Not Found
            <ul>
                <li>NotFound.Account</li>
            </ul>
            </response>
            <response code="422">UnprocessableEntity
            <ul>
                <li>NotRegistered.Movement</li>
            </ul>
            </response>
            <response code="500">InternalServerError
            <ul>
                <li>Error.Unexpected</li>
            </ul>
            </response>
        </member>
        <member name="M:Questao5.Controllers.MovementController.GetBalanceAsync(Questao5.Application.Queries.Movements.GetBalanceQuery)">
            <summary>
            api/movements/balances.
            </summary>
            <remarks>
            <p>
            <b> Desciption: </b><br />
            This method get a balance result. <br />
            </p>
            <p>
            <b> Requirements: </b><br />
            Not Exists. <br />
            </p>
            </remarks>
            <response code="200"> OK </response>
            <response code="400"> Bad Request
            <ul>
            <li>Inactive.Account</li>
            <li>Invalid.AccountNumber</li>
            </ul>
            </response>
            <response code="404">Not Found
            <ul>
                <li>NotFound.Account</li>
            </ul>
            </response>
            <response code="500"> InternalServerError
            <ul>
            <li> Error.Unexpected </li>
            </ul>
            </response>
        </member>
    </members>
</doc>
