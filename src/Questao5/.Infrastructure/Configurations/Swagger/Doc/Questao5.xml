<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Questao5</name>
    </assembly>
    <members>
        <member name="M:Questao5.Controllers.MovementController.CreateMovementAsync(Questao5.Application.Commands.Movements.CreateMovementCommand)">
             <summary>
             order v1 (deprecated)
             </summary>
             <remarks>
             <p>
             <b>Description: </b><br />
             This method returns data from an Order in state (if exists). This method will be discontinued in the future.<br />
             </p>
             <br />
             <p>
             <b>Requirements: </b><br />
             Authenticated JWT token as bearer token in request header.<br />
             JWT Token must be authorized with your username and password thru User/Authentication API.<br />
             An order must be retrieved, or under creation, in the current state.
             </p>
             <br />
             </remarks>
             <response code="200">Ok</response>
             <response code="400">Bad Request</response>
             <response code="401">Unauthorized
             <ul>
                 <li>InvalidToken.Expired</li>
                 <li>InvalidToken.NotAuthenticated</li>
                 <li>InvalidToken.NotInformed</li>
             </ul>
             </response>
             <response code="404">Not Found</response>
             <response code="409">Conflict
             <ul>
                 <li>Order.UnderCreationException</li>
             </ul>
            </response>
             <response code="500">Internal Server Error</response>
             <response code="502">Bad Gateway
             <ul>
                 <li>UserOrganization.NotAllowed</li>
                 <li>RequestFailed.Unexpected</li>
             </ul>
             </response>
        </member>
        <member name="T:Questao5.Infrastructure.Configurations.Controllers.BaseController`1">
            <summary>
            Base controller class.
            </summary>
        </member>
        <member name="P:Questao5.Infrastructure.Configurations.Controllers.BaseController`1._mediatorService">
            <summary>
            Gets or Sets the mediator service.
            </summary>
        </member>
        <member name="P:Questao5.Infrastructure.Configurations.Controllers.BaseController`1._messageCatalog">
            <summary>
            Gets the message catalog.
            </summary>
        </member>
        <member name="M:Questao5.Infrastructure.Configurations.Controllers.BaseController`1.ExecuteAsync``1(System.Func{System.Threading.Tasks.Task{``0}})">
            <summary>
            
            </summary>
            <typeparam name="TDataObject">The type of the data object.</typeparam>
            <param name="function">The function</param>
            <returns></returns>
        </member>
        <member name="M:Questao5.Infrastructure.Configurations.Controllers.BaseController`1.ExecuteAsync``1(System.Func{System.Threading.Tasks.Task{``0}},System.Net.HttpStatusCode)">
            <summary>
            Generate the response asynchronous.
            </summary>
            <typeparam name="TDataObject">The type of the data object.</typeparam>
            <param name="function">The function</param>
            <param name="httpStatusCode">The response code.</param>
            <returns></returns>
        </member>
        <member name="M:Questao5.Infrastructure.Configurations.Controllers.BaseController`1.HandleFatalError">
            <summary>
            Handle the exception result when fatal error occurs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Questao5.Infrastructure.Configurations.Controllers.BaseController`1.HandleAppCustomException(Questao5.Infrastructure.Exceptions.AppCustomException)">
            <summary>
            Handle the exception result when AppCustomException occurs.
            </summary>
            <param name="exception"> The exception. </param>
            <returns></returns>
        </member>
        <member name="M:Questao5.Infrastructure.Configurations.Controllers.BaseController`1.HandleValidationException(FluentValidation.ValidationException)">
            <summary>
            Handle the exception result when ValidationException occurs.
            </summary>
            <param name="exception"> The exception. </param>
            <returns></returns>
        </member>
        <member name="T:Questao5.Infrastructure.Configurations.Validations.ValidatorBehavior`2">
            <summary>
            Validator behavior for mediator pipeline class.
            </summary>
            <typeparam name="TRequest"> The type of the request. </typeparam>
            <typeparam name="TResponse"> The type of the response. </typeparam>
        </member>
        <member name="M:Questao5.Infrastructure.Configurations.Validations.ValidatorBehavior`2.Handle(`0,MediatR.RequestHandlerDelegate{`1},System.Threading.CancellationToken)">
            <summary>
            Handles the request validations.
            </summary>
            <param name="request"> The request. </param>
            <param name="next"> The next. </param>
            <param name="cancellationToken"> The cancellation token. </param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
    </members>
</doc>
